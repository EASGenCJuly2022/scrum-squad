2022-08-05 11:33:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO [*]User (firstName, lastName, gender, email, phone) VALUES ('Brett', 'Renz', 'M', 'b@b.com', ""123"")"; expected "identifier"; SQL statement:
INSERT INTO User (firstName, lastName, gender, email, phone) VALUES ('Brett', 'Renz', 'M', 'b@b.com', "123") [42001-214]
2022-08-05 11:36:20 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from [*]user"; expected "identifier"; SQL statement:
select * from user [42001-214]
2022-08-05 11:41:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from [*]User"; expected "identifier"; SQL statement:
select * from User [42001-214]
2022-08-05 11:42:05 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from [*]user"; expected "identifier"; SQL statement:
select * from user [42001-214]
2022-08-05 11:42:05 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from [*]user"; expected "identifier"; SQL statement:
select * from user [42001-214]
2022-08-05 11:42:05 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from [*]user"; expected "identifier"; SQL statement:
select * from user [42001-214]
2022-08-05 11:43:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from [*]user"; expected "identifier"; SQL statement:
select * from user [42001-214]
2022-08-05 11:44:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS Customer ( [*]'id' INTEGER PRIMARY KEY AUTO_INCREMENT, 'firstName' VARCHAR(50) NOT NULL, 'lastName' VARCHAR(50) NOT NULL, 'gender' VARCHAR(10) NOT NULL, 'email' VARCHAR(100) NOT NULL, 'phone' INTEGER NOT NULL )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS Customer ( 'id' INTEGER PRIMARY KEY AUTO_INCREMENT, 'firstName' VARCHAR(50) NOT NULL, 'lastName' VARCHAR(50) NOT NULL, 'gender' VARCHAR(10) NOT NULL, 'email' VARCHAR(100) NOT NULL, 'phone' INTEGER NOT NULL ) [42001-214]
2022-08-05 11:45:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" not found (this database is empty); SQL statement:
select * from customer [42104-214]
2022-08-05 11:46:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" not found (this database is empty); SQL statement:
INSERT INTO customer (firstName, lastName, gender, email, phone) VALUES ('Brett', 'Renz', 'M', 'b@b.com', "123") [42104-214]
2022-08-05 11:47:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS Customer ( [*]'id' INTEGER PRIMARY KEY AUTO_INCREMENT, 'firstName' VARCHAR(50) NOT NULL, 'lastName' VARCHAR(50) NOT NULL, 'gender' VARCHAR(10) NOT NULL, 'email' VARCHAR(100) NOT NULL, 'phone' INTEGER NOT NULL )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS Customer ( 'id' INTEGER PRIMARY KEY AUTO_INCREMENT, 'firstName' VARCHAR(50) NOT NULL, 'lastName' VARCHAR(50) NOT NULL, 'gender' VARCHAR(10) NOT NULL, 'email' VARCHAR(100) NOT NULL, 'phone' INTEGER NOT NULL ) [42001-214]
2022-08-05 11:52:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMER" not found (this database is empty); SQL statement:
INSERT INTO customer (firstName, lastName, gender, email, phone) VALUES ('Brett', 'Renz', 'M', 'b@b.com', "123") [42104-214]
2022-08-05 11:53:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "123" not found; SQL statement:
INSERT INTO customer (firstName, lastName, gender, email, phone) VALUES ('Brett', 'Renz', 'M', 'b@b.com', "123") [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:300)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.user.userservice.UserserviceApplication.main(UserserviceApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
